-- testRelations.sql
-- Tester integritet og sammenhenger i automated_test-databasen

USE [automated_test];
GO

-- 1. Sjekk at alle ACCESSCATALYST har gyldig EMPLOYEE
SELECT COUNT(*) AS InvalidAccessCatalystEmployee
FROM ACCESSCATALYST a
LEFT JOIN EMPLOYEE e ON a.EMPLOYEE = e.EMPLOYEE
WHERE e.EMPLOYEE IS NULL;

-- 2. Sjekk at alle EMPLOYEE har gyldig ORGANIZATION
SELECT COUNT(*) AS InvalidEmployeeOrganization
FROM EMPLOYEE e
LEFT JOIN ORGANIZATION o ON e.ORGANIZATION = o.ORGANIZATION
WHERE o.ORGANIZATION IS NULL;

-- 3. Sjekk at alle USERPROFILE refererer til gyldig ACCESSCATALYST
SELECT COUNT(*) AS InvalidUserProfileAccessCatalyst
FROM USERPROFILE u
LEFT JOIN ACCESSCATALYST a ON u.ACCESSCATALYST = a.ACCESSCATALYST
WHERE a.ACCESSCATALYST IS NULL;

-- 4. Sjekk at det finnes data i alle hovedtabeller
SELECT 'SCALETYPE' AS TableName, COUNT(*) AS [RowCount] FROM SCALETYPE
UNION ALL
SELECT 'SCALE', COUNT(*) FROM SCALE
UNION ALL
SELECT 'ORGANIZATION', COUNT(*) FROM ORGANIZATION
UNION ALL
SELECT 'EMPLOYEE', COUNT(*) FROM EMPLOYEE
UNION ALL
SELECT 'ACCESSCATALYST', COUNT(*) FROM ACCESSCATALYST
UNION ALL
SELECT 'USERPROFILE_FIELD', COUNT(*) FROM USERPROFILE_FIELD
UNION ALL
SELECT 'USERPROFILE', COUNT(*) FROM USERPROFILE
UNION ALL
SELECT 'USERPROFILE_HISTORY', COUNT(*) FROM USERPROFILE_HISTORY;

-- 5. Sjekk at alle USERPROFILE_FIELD har unike FIELDNAME
SELECT 
  CASE WHEN COUNT(*) = 0 THEN 'OK - alle FIELDNAME er unike'
       ELSE 'FEIL - duplikate FIELDNAME funnet'
  END AS Status,
  COUNT(*) AS AntallDuplikater
FROM (
  SELECT FIELDNAME
  FROM USERPROFILE_FIELD
  GROUP BY FIELDNAME
  HAVING COUNT(*) > 1
) d;

-- 6. Sjekk at alle USERPROFILE refererer til gyldig USERPROFILE_FIELD
SELECT COUNT(*) AS InvalidUserProfileField
FROM USERPROFILE u
LEFT JOIN USERPROFILE_FIELD f ON u.USERFIELD = f.USERPROFILE_FIELD_ID
WHERE f.USERPROFILE_FIELD_ID IS NULL;

-- 7. Eksempel på lesbar join: Vis 10 brukere med tilhørende ansatt og organisasjon
SELECT TOP 10
  a.ACCESSCATALYST, a.USERNAME, e.GIVENNAME, e.SURNAME, o.NAME AS ORG_NAME
FROM ACCESSCATALYST a
JOIN EMPLOYEE e ON a.EMPLOYEE = e.EMPLOYEE
JOIN ORGANIZATION o ON e.ORGANIZATION = o.ORGANIZATION;

-- 8. Sjekk at alle foreign keys i USERPROFILE_HISTORY peker på gyldige ACCESSCATALYST (hvis feltet er brukt)
SELECT 
  CASE WHEN COUNT(*) = 0 THEN 'OK - alle USERPROFILE_HISTORY referanser til ACCESSCATALYST er gyldige'
       ELSE 'FEIL - ugyldig ACCESSCATALYST i USERPROFILE_HISTORY'
  END AS Status,
  COUNT(*) AS AntallFeil
FROM USERPROFILE_HISTORY h
LEFT JOIN ACCESSCATALYST a ON h.ACCESSCATALYST = a.ACCESSCATALYST
WHERE h.ACCESSCATALYST IS NOT NULL AND a.ACCESSCATALYST IS NULL;

-- 9. Sjekk at det ikke finnes "orphans" i EMPLOYEE (f.eks. MANAGER peker på ikke-eksisterende EMPLOYEE)
SELECT 
  CASE WHEN COUNT(*) = 0 THEN 'OK - alle MANAGER-referanser i EMPLOYEE er gyldige'
       ELSE 'FEIL - ugyldig MANAGER i EMPLOYEE'
  END AS Status,
  COUNT(*) AS AntallFeil
FROM EMPLOYEE e
LEFT JOIN EMPLOYEE m ON e.MANAGER = m.EMPLOYEE
WHERE e.MANAGER IS NOT NULL AND m.EMPLOYEE IS NULL;

-- 10. Oppsummering: Antall rader i alle tabeller
SELECT t.name AS TableName, SUM(p.rows) AS RowCounts
FROM sys.tables t
INNER JOIN sys.partitions p ON t.object_id = p.object_id
WHERE p.index_id IN (0,1)
GROUP BY t.name
ORDER BY t.name;
